name: CI

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]

permissions:
  contents: write
  pages: write
  id-token: write
  pull-requests: write
  issues: write

jobs:
  # 1) テストだけ行うジョブ
  test:
    name: Test (both PR and push)
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        run: npm install

      - name: Run npm audit
        run: npm audit --audit-level=high

      - name: Run Prettier check
        id: prettier-check
        run: npm run format:check
        continue-on-error: true
      
      - name: Auto-fix formatting issues
        if: failure() && steps.prettier-check.outcome == 'failure'
        run: |
          npm run format
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "chore: auto-fix formatting issues with Prettier"
          git push

      - name: Run tests
        run: npm test

      - name: Run lint
        run: npm run lint

      - name: Run coverage
        run: npm run test:coverage

      - name: Upload coverage to GitHub artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@1e68e06f1dbfde0e4cefc87efeba9e4643565303
        with:
          files: ./coverage/**/clover.xml
      
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v4
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.SONAR_ORG }}
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # 2) mainブランチへのpush時にのみビルド＆Pagesデプロイを行うジョブ
  build_and_deploy:
    name: Build and Deploy to GitHub Pages
    needs: [test]  # テストジョブに成功してから続行
    runs-on: ubuntu-latest
    # pull_requestではなく、mainブランチにpushされた時だけ実行
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        run: npm install

      - name: Run Semantic Release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        run: npm run build

      # Webpack等のビルド成果物がpublic/に出力される想定
      - name: Upload artifact for Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
