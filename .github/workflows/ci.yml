name: CI

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]

permissions:
  contents: write
  pages: write
  id-token: write
  pull-requests: write
  issues: write

jobs:
  # 1) テストだけ行うジョブ
  test:
    name: Test (both PR and push)
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Run lint
        run: npm run lint

      - name: Run coverage
        run: npm run test:coverage

      - name: Upload coverage to GitHub artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          # Jest で作成された coverage 場所が coverage/
          files: ./coverage/**/clover.xml

  # 2) mainブランチへのpush時にのみビルド＆Pagesデプロイを行うジョブ
  build_and_deploy:
    name: Build and Deploy to GitHub Pages
    needs: [test]  # テストジョブに成功してから続行
    runs-on: ubuntu-latest
    # pull_requestではなく、mainブランチにpushされた時だけ実行
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        run: npm install

      - name: Run Semantic Release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        run: npm run build

      # Webpack等のビルド成果物がpublic/に出力される想定
      - name: Upload artifact for Pages
        uses: actions/upload-pages-artifact@v1
        with:
          path: public

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
